Grammar

    0 $accept: chunk $end

    1 chunk: block

    2 block: stat
    3      | block stat

    4 stat: exp SEM
    5     | var EQ exp SEM
    6     | IF exp Then block End

    7 exp: False
    8    | True
    9    | Numeral
   10    | LiteralString
   11    | var
   12    | exp Add exp
   13    | exp Sub exp
   14    | exp Mul exp
   15    | exp Div exp
   16    | Sub exp
   17    | LB exp RB

   18 var: Name


Terminals, with rules where they appear

$end (0) 0
error (256)
IF (258) 6
Then (259) 6
End (260) 6
False (261) 7
True (262) 8
EQ (263) 5
SEM (264) 4 5
Add (265) 12
Sub (266) 13 16
Mul (267) 14
Div (268) 15
LB (269) 17
RB (270) 17
Numeral (271) 9
Name (272) 18
LiteralString (273) 10
NEG (274)
BRACE (275)


Nonterminals, with rules where they appear

$accept (21)
    on left: 0
chunk (22)
    on left: 1, on right: 0
block (23)
    on left: 2 3, on right: 1 3 6
stat (24)
    on left: 4 5 6, on right: 2 3
exp (25)
    on left: 7 8 9 10 11 12 13 14 15 16 17, on right: 4 5 6 12 13 14
    15 16 17
var (26)
    on left: 18, on right: 5 11


State 0

    0 $accept: . chunk $end

    IF             shift, and go to state 1
    False          shift, and go to state 2
    True           shift, and go to state 3
    Sub            shift, and go to state 4
    LB             shift, and go to state 5
    Numeral        shift, and go to state 6
    Name           shift, and go to state 7
    LiteralString  shift, and go to state 8

    chunk  go to state 9
    block  go to state 10
    stat   go to state 11
    exp    go to state 12
    var    go to state 13


State 1

    6 stat: IF . exp Then block End

    False          shift, and go to state 2
    True           shift, and go to state 3
    Sub            shift, and go to state 4
    LB             shift, and go to state 5
    Numeral        shift, and go to state 6
    Name           shift, and go to state 7
    LiteralString  shift, and go to state 8

    exp  go to state 14
    var  go to state 15


State 2

    7 exp: False .

    $default  reduce using rule 7 (exp)


State 3

    8 exp: True .

    $default  reduce using rule 8 (exp)


State 4

   16 exp: Sub . exp

    False          shift, and go to state 2
    True           shift, and go to state 3
    Sub            shift, and go to state 4
    LB             shift, and go to state 5
    Numeral        shift, and go to state 6
    Name           shift, and go to state 7
    LiteralString  shift, and go to state 8

    exp  go to state 16
    var  go to state 15


State 5

   17 exp: LB . exp RB

    False          shift, and go to state 2
    True           shift, and go to state 3
    Sub            shift, and go to state 4
    LB             shift, and go to state 5
    Numeral        shift, and go to state 6
    Name           shift, and go to state 7
    LiteralString  shift, and go to state 8

    exp  go to state 17
    var  go to state 15


State 6

    9 exp: Numeral .

    $default  reduce using rule 9 (exp)


State 7

   18 var: Name .

    $default  reduce using rule 18 (var)


State 8

   10 exp: LiteralString .

    $default  reduce using rule 10 (exp)


State 9

    0 $accept: chunk . $end

    $end  shift, and go to state 18


State 10

    1 chunk: block .
    3 block: block . stat

    IF             shift, and go to state 1
    False          shift, and go to state 2
    True           shift, and go to state 3
    Sub            shift, and go to state 4
    LB             shift, and go to state 5
    Numeral        shift, and go to state 6
    Name           shift, and go to state 7
    LiteralString  shift, and go to state 8

    $default  reduce using rule 1 (chunk)

    stat  go to state 19
    exp   go to state 12
    var   go to state 13


State 11

    2 block: stat .

    $default  reduce using rule 2 (block)


State 12

    4 stat: exp . SEM
   12 exp: exp . Add exp
   13    | exp . Sub exp
   14    | exp . Mul exp
   15    | exp . Div exp

    SEM  shift, and go to state 20
    Add  shift, and go to state 21
    Sub  shift, and go to state 22
    Mul  shift, and go to state 23
    Div  shift, and go to state 24


State 13

    5 stat: var . EQ exp SEM
   11 exp: var .

    EQ  shift, and go to state 25

    $default  reduce using rule 11 (exp)


State 14

    6 stat: IF exp . Then block End
   12 exp: exp . Add exp
   13    | exp . Sub exp
   14    | exp . Mul exp
   15    | exp . Div exp

    Then  shift, and go to state 26
    Add   shift, and go to state 21
    Sub   shift, and go to state 22
    Mul   shift, and go to state 23
    Div   shift, and go to state 24


State 15

   11 exp: var .

    $default  reduce using rule 11 (exp)


State 16

   12 exp: exp . Add exp
   13    | exp . Sub exp
   14    | exp . Mul exp
   15    | exp . Div exp
   16    | Sub exp .

    $default  reduce using rule 16 (exp)


State 17

   12 exp: exp . Add exp
   13    | exp . Sub exp
   14    | exp . Mul exp
   15    | exp . Div exp
   17    | LB exp . RB

    Add  shift, and go to state 21
    Sub  shift, and go to state 22
    Mul  shift, and go to state 23
    Div  shift, and go to state 24
    RB   shift, and go to state 27


State 18

    0 $accept: chunk $end .

    $default  accept


State 19

    3 block: block stat .

    $default  reduce using rule 3 (block)


State 20

    4 stat: exp SEM .

    $default  reduce using rule 4 (stat)


State 21

   12 exp: exp Add . exp

    False          shift, and go to state 2
    True           shift, and go to state 3
    Sub            shift, and go to state 4
    LB             shift, and go to state 5
    Numeral        shift, and go to state 6
    Name           shift, and go to state 7
    LiteralString  shift, and go to state 8

    exp  go to state 28
    var  go to state 15


State 22

   13 exp: exp Sub . exp

    False          shift, and go to state 2
    True           shift, and go to state 3
    Sub            shift, and go to state 4
    LB             shift, and go to state 5
    Numeral        shift, and go to state 6
    Name           shift, and go to state 7
    LiteralString  shift, and go to state 8

    exp  go to state 29
    var  go to state 15


State 23

   14 exp: exp Mul . exp

    False          shift, and go to state 2
    True           shift, and go to state 3
    Sub            shift, and go to state 4
    LB             shift, and go to state 5
    Numeral        shift, and go to state 6
    Name           shift, and go to state 7
    LiteralString  shift, and go to state 8

    exp  go to state 30
    var  go to state 15


State 24

   15 exp: exp Div . exp

    False          shift, and go to state 2
    True           shift, and go to state 3
    Sub            shift, and go to state 4
    LB             shift, and go to state 5
    Numeral        shift, and go to state 6
    Name           shift, and go to state 7
    LiteralString  shift, and go to state 8

    exp  go to state 31
    var  go to state 15


State 25

    5 stat: var EQ . exp SEM

    False          shift, and go to state 2
    True           shift, and go to state 3
    Sub            shift, and go to state 4
    LB             shift, and go to state 5
    Numeral        shift, and go to state 6
    Name           shift, and go to state 7
    LiteralString  shift, and go to state 8

    exp  go to state 32
    var  go to state 15


State 26

    6 stat: IF exp Then . block End

    IF             shift, and go to state 1
    False          shift, and go to state 2
    True           shift, and go to state 3
    Sub            shift, and go to state 4
    LB             shift, and go to state 5
    Numeral        shift, and go to state 6
    Name           shift, and go to state 7
    LiteralString  shift, and go to state 8

    block  go to state 33
    stat   go to state 11
    exp    go to state 12
    var    go to state 13


State 27

   17 exp: LB exp RB .

    $default  reduce using rule 17 (exp)


State 28

   12 exp: exp . Add exp
   12    | exp Add exp .
   13    | exp . Sub exp
   14    | exp . Mul exp
   15    | exp . Div exp

    Mul  shift, and go to state 23
    Div  shift, and go to state 24

    $default  reduce using rule 12 (exp)


State 29

   12 exp: exp . Add exp
   13    | exp . Sub exp
   13    | exp Sub exp .
   14    | exp . Mul exp
   15    | exp . Div exp

    Mul  shift, and go to state 23
    Div  shift, and go to state 24

    $default  reduce using rule 13 (exp)


State 30

   12 exp: exp . Add exp
   13    | exp . Sub exp
   14    | exp . Mul exp
   14    | exp Mul exp .
   15    | exp . Div exp

    $default  reduce using rule 14 (exp)


State 31

   12 exp: exp . Add exp
   13    | exp . Sub exp
   14    | exp . Mul exp
   15    | exp . Div exp
   15    | exp Div exp .

    $default  reduce using rule 15 (exp)


State 32

    5 stat: var EQ exp . SEM
   12 exp: exp . Add exp
   13    | exp . Sub exp
   14    | exp . Mul exp
   15    | exp . Div exp

    SEM  shift, and go to state 34
    Add  shift, and go to state 21
    Sub  shift, and go to state 22
    Mul  shift, and go to state 23
    Div  shift, and go to state 24


State 33

    3 block: block . stat
    6 stat: IF exp Then block . End

    IF             shift, and go to state 1
    End            shift, and go to state 35
    False          shift, and go to state 2
    True           shift, and go to state 3
    Sub            shift, and go to state 4
    LB             shift, and go to state 5
    Numeral        shift, and go to state 6
    Name           shift, and go to state 7
    LiteralString  shift, and go to state 8

    stat  go to state 19
    exp   go to state 12
    var   go to state 13


State 34

    5 stat: var EQ exp SEM .

    $default  reduce using rule 5 (stat)


State 35

    6 stat: IF exp Then block End .

    $default  reduce using rule 6 (stat)
